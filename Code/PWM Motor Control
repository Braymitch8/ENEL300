

#include <avr/io.h>
#include <util/delay.h>

uint16_t duty = 450; // 80% duty cycle for strong motor performance

int main(void){
    CCP = 0xD8; // Unlock protected I/O registers

    // Set clock to 8 MHz
    CLKCTRL.OSCHFCTRLA = 0x14;
    while (CLKCTRL.MCLKSTATUS & 0b00000001);

    // Configure PWM on PA0 (ENA pin)
    TCA0.SINGLE.CTRLA = (0x01 << 3) | 0x01; // Divide by 16 and enable peripheral
    TCA0.SINGLE.CTRLB = 0b00110011;  // Enable Single-slope PWM
    TCA0.SINGLE.PER = 500 - 1; // Set PWM frequency to 1 kHz
    TCA0.SINGLE.CMP0 = duty;  // Set duty cycle

    PORTA.DIRSET = 0x01;
    PORTC.DIRSET = 0x01;
    PORTD.DIRSET = 0b01100000;
    PORTA.DIRCLR = 0b00001100;
    
while (1) {
    if ((PORTA.IN & 0b00000100) && !(PORTA.IN & 0b00001000)) { 
        // If PA2 is HIGH and PA3 is LOW
        PORTD.OUT = 0b01000000; // Set PD6 HIGH, PD5 LOW
    } 
    else if (!(PORTA.IN & 0b00000100) && (PORTA.IN & 0b00001000)) { 
        // If PA2 is LOW and PA3 is HIGH
        PORTD.OUT = 0b00100000; // Set PD6 LOW, PD5 HIGH
    } 
    else { 
        // If PA2 and PA3 are the same (both HIGH or both LOW)
        PORTD.OUT = 0b00000000; // Set PD6 and PD5 LOW
    }
}

}

